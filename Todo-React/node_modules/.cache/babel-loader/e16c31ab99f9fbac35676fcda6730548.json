{"ast":null,"code":"var _jsxFileName = \"/Users/atanunayak/Desktop/Hacktober - Yashika1410/HacktoberFest-2022/Todo-React/src/components/TodoList.js\";\nimport { Fragment, React } from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: props.todoList.map(item => {\n      return /*#__PURE__*/_jsxDEV(TodoItem, {\n        todoItem: item,\n        editTodoHandler: props.editTodoHandler,\n        deleteTodoHandler: props.deleteTodoHandler,\n        isDoneHandler: props.isDoneHandler\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/atanunayak/Desktop/Hacktober - Yashika1410/HacktoberFest-2022/Todo-React/src/components/TodoList.js"],"names":["Fragment","React","TodoItem","TodoList","props","todoList","map","item","editTodoHandler","deleteTodoHandler","isDoneHandler","id"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,KAAnB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBACE,QAAC,QAAD;AAAA,cACGA,KAAK,CAACC,QAAN,CAAeC,GAAf,CAAoBC,IAAD,IAAU;AAC5B,0BACE,QAAC,QAAD;AACE,QAAA,QAAQ,EAAEA,IADZ;AAGE,QAAA,eAAe,EAAEH,KAAK,CAACI,eAHzB;AAIE,QAAA,iBAAiB,EAAEJ,KAAK,CAACK,iBAJ3B;AAKE,QAAA,aAAa,EAAEL,KAAK,CAACM;AALvB,SAEOH,IAAI,CAACI,EAFZ;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAVA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAhBD;;KAAMR,Q;AAkBN,eAAeA,QAAf","sourcesContent":["import { Fragment, React } from \"react\";\nimport TodoItem from \"./TodoItem\";\n\nconst TodoList = (props) => {\n  return (\n    <Fragment>\n      {props.todoList.map((item) => {\n        return (\n          <TodoItem\n            todoItem={item}\n            key={item.id}\n            editTodoHandler={props.editTodoHandler}\n            deleteTodoHandler={props.deleteTodoHandler}\n            isDoneHandler={props.isDoneHandler}\n          ></TodoItem>\n        );\n      })}\n    </Fragment>\n  );\n};\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}