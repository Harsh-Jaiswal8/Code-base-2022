{"ast":null,"code":"var _jsxFileName = \"/Users/atanunayak/Desktop/Hacktober - Yashika1410/HacktoberFest-2022/Todo-React/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport TodoInput from \"./components/TodoInput\";\nimport TodoList from \"./components/TodoList\";\nimport TodoEdit from \"./components/TodoEdit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todoList, setTodoList] = useState([]);\n  const [editingMode, setEditingMode] = useState(null);\n\n  const addTodoHandler = newTodoItem => {\n    setTodoList(prev => {\n      return [...prev, {\n        id: prev.length,\n        value: newTodoItem,\n        isDone: false\n      }];\n    });\n  };\n\n  const deleteTodoHandler = id => {\n    const newItems = todoList.filter(item => item.id !== id);\n    setTodoList(newItems);\n  };\n\n  const editTodoHandler = id => {\n    setEditingMode(id);\n  };\n\n  const updateTodoHandler = updatedItem => {\n    const newItems = todoList.map(item => {\n      return item.id === updatedItem.id ? updatedItem : item;\n    });\n    setTodoList(newItems);\n    setEditingMode(null);\n  };\n\n  const isDoneHandler = id => {\n    const newItems = todoList.map(item => {\n      return item.id === id ? { ...item,\n        isDone: !item.isDone\n      } : item;\n    });\n    setTodoList(newItems);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [editingMode !== null ? /*#__PURE__*/_jsxDEV(TodoEdit, {\n      todoListItem: todoList[editingMode],\n      updateTodoHandler: updateTodoHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TodoInput, {\n      addTodoHandler: addTodoHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todoList: todoList,\n      deleteTodoHandler: deleteTodoHandler,\n      editTodoHandler: editTodoHandler,\n      isDoneHandler: isDoneHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pK3N/Vg7Jxv4ezy36Yb1LOvTaiQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/atanunayak/Desktop/Hacktober - Yashika1410/HacktoberFest-2022/Todo-React/src/App.js"],"names":["React","Fragment","useState","TodoInput","TodoList","TodoEdit","App","todoList","setTodoList","editingMode","setEditingMode","addTodoHandler","newTodoItem","prev","id","length","value","isDone","deleteTodoHandler","newItems","filter","item","editTodoHandler","updateTodoHandler","updatedItem","map","isDoneHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,IAAD,CAA9C;;AAEA,QAAMS,cAAc,GAAIC,WAAD,IAAiB;AACtCJ,IAAAA,WAAW,CAAEK,IAAD,IAAU;AACpB,aAAO,CACL,GAAGA,IADE,EAEL;AACEC,QAAAA,EAAE,EAAED,IAAI,CAACE,MADX;AAEEC,QAAAA,KAAK,EAAEJ,WAFT;AAGEK,QAAAA,MAAM,EAAE;AAHV,OAFK,CAAP;AAQD,KATU,CAAX;AAUD,GAXD;;AAaA,QAAMC,iBAAiB,GAAIJ,EAAD,IAAQ;AAChC,UAAMK,QAAQ,GAAGZ,QAAQ,CAACa,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACP,EAAL,KAAYA,EAAtC,CAAjB;AACAN,IAAAA,WAAW,CAACW,QAAD,CAAX;AACD,GAHD;;AAKA,QAAMG,eAAe,GAAIR,EAAD,IAAQ;AAC9BJ,IAAAA,cAAc,CAACI,EAAD,CAAd;AACD,GAFD;;AAIA,QAAMS,iBAAiB,GAAIC,WAAD,IAAiB;AACzC,UAAML,QAAQ,GAAGZ,QAAQ,CAACkB,GAAT,CAAcJ,IAAD,IAAU;AACtC,aAAOA,IAAI,CAACP,EAAL,KAAYU,WAAW,CAACV,EAAxB,GAA6BU,WAA7B,GAA2CH,IAAlD;AACD,KAFgB,CAAjB;AAGAb,IAAAA,WAAW,CAACW,QAAD,CAAX;AACAT,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAND;;AAQA,QAAMgB,aAAa,GAAIZ,EAAD,IAAQ;AAC5B,UAAMK,QAAQ,GAAGZ,QAAQ,CAACkB,GAAT,CAAcJ,IAAD,IAAU;AACtC,aAAOA,IAAI,CAACP,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGO,IAAL;AAAWJ,QAAAA,MAAM,EAAE,CAACI,IAAI,CAACJ;AAAzB,OAAjB,GAAqDI,IAA5D;AACD,KAFgB,CAAjB;AAGAb,IAAAA,WAAW,CAACW,QAAD,CAAX;AACD,GALD;;AAMA,sBACE,QAAC,QAAD;AAAA,eACGV,WAAW,KAAK,IAAhB,gBACC,QAAC,QAAD;AACE,MAAA,YAAY,EAAEF,QAAQ,CAACE,WAAD,CADxB;AAEE,MAAA,iBAAiB,EAAEc;AAFrB;AAAA;AAAA;AAAA;AAAA,YADD,gBAMC,QAAC,SAAD;AAAW,MAAA,cAAc,EAAEZ;AAA3B;AAAA;AAAA;AAAA;AAAA,YAPJ,eAUE,QAAC,QAAD;AACE,MAAA,QAAQ,EAAEJ,QADZ;AAEE,MAAA,iBAAiB,EAAEW,iBAFrB;AAGE,MAAA,eAAe,EAAEI,eAHnB;AAIE,MAAA,aAAa,EAAEI;AAJjB;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA3DQpB,G;;KAAAA,G;AA6DT,eAAeA,GAAf","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport TodoInput from \"./components/TodoInput\";\nimport TodoList from \"./components/TodoList\";\nimport TodoEdit from \"./components/TodoEdit\";\n\nfunction App() {\n  const [todoList, setTodoList] = useState([]);\n  const [editingMode, setEditingMode] = useState(null);\n\n  const addTodoHandler = (newTodoItem) => {\n    setTodoList((prev) => {\n      return [\n        ...prev,\n        {\n          id: prev.length,\n          value: newTodoItem,\n          isDone: false,\n        },\n      ];\n    });\n  };\n\n  const deleteTodoHandler = (id) => {\n    const newItems = todoList.filter((item) => item.id !== id);\n    setTodoList(newItems);\n  };\n\n  const editTodoHandler = (id) => {\n    setEditingMode(id);\n  };\n\n  const updateTodoHandler = (updatedItem) => {\n    const newItems = todoList.map((item) => {\n      return item.id === updatedItem.id ? updatedItem : item;\n    });\n    setTodoList(newItems);\n    setEditingMode(null);\n  };\n\n  const isDoneHandler = (id) => {\n    const newItems = todoList.map((item) => {\n      return item.id === id ? { ...item, isDone: !item.isDone } : item;\n    });\n    setTodoList(newItems);\n  };\n  return (\n    <Fragment>\n      {editingMode !== null ? (\n        <TodoEdit\n          todoListItem={todoList[editingMode]}\n          updateTodoHandler={updateTodoHandler}\n        ></TodoEdit>\n      ) : (\n        <TodoInput addTodoHandler={addTodoHandler}></TodoInput>\n      )}\n\n      <TodoList\n        todoList={todoList}\n        deleteTodoHandler={deleteTodoHandler}\n        editTodoHandler={editTodoHandler}\n        isDoneHandler={isDoneHandler}\n      ></TodoList>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}